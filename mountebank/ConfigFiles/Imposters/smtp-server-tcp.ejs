<%
// EJS Template for SMTP Server TCP Imposter
// This template allows for dynamic configuration of the SMTP mock server

// Safely handle the injected variable - use try/catch to avoid ReferenceError
let safeInjected = {};
try {
  safeInjected = injected || {};
} catch (e) {
  // injected is not defined, use empty object
  safeInjected = {};
}

// Configuration variables - can be overridden via environment variables or injected data
const config = {
  smtpPort: process.env.SMTP_PORT || safeInjected.smtpPort || 3005,
  smtpHost: process.env.SMTP_HOST || safeInjected.smtpHost || '127.0.0.1',
  serverName: process.env.SMTP_SERVER_NAME || safeInjected.serverName || 'Mock SMTP Server for JMeter (TCP-based)',
  maxMessageSize: process.env.SMTP_MAX_SIZE || safeInjected.maxMessageSize || 52428800,
  enableAuth: (String(process.env.SMTP_ENABLE_AUTH || safeInjected.enableAuth || 'false')).toLowerCase() === 'true',
  enableTLS: (String(process.env.SMTP_ENABLE_TLS || safeInjected.enableTLS || 'false')).toLowerCase() === 'true',
  welcomeMessage: process.env.SMTP_WELCOME || safeInjected.welcomeMessage || 'ESMTP Mock SMTP Server Ready',
  responseDelays: {
    welcome: parseInt(process.env.SMTP_DELAY_WELCOME || safeInjected.delayWelcome || '100'),
    ehlo: parseInt(process.env.SMTP_DELAY_EHLO || safeInjected.delayEhlo || '100'),
    mail: parseInt(process.env.SMTP_DELAY_MAIL || safeInjected.delayMail || '100'),
    rcpt: parseInt(process.env.SMTP_DELAY_RCPT || safeInjected.delayRcpt || '150'),
    data: parseInt(process.env.SMTP_DELAY_DATA || safeInjected.delayData || '50'),
    content: parseInt(process.env.SMTP_DELAY_CONTENT || safeInjected.delayContent || '10'),
    quit: parseInt(process.env.SMTP_DELAY_QUIT || safeInjected.delayQuit || '100')
  }
};

// Generate EHLO capabilities based on configuration
let ehloCapabilities = `250-${config.smtpHost} Hello client\\r\\n`;
ehloCapabilities += `250-SIZE ${config.maxMessageSize}\\r\\n`;
ehloCapabilities += `250-8BITMIME\\r\\n`;
ehloCapabilities += `250-PIPELINING\\r\\n`;
ehloCapabilities += `250-CHUNKING\\r\\n`;
ehloCapabilities += `250-SMTPUTF8\\r\\n`;

if (config.enableAuth) {
  ehloCapabilities += `250-AUTH PLAIN LOGIN\\r\\n`;
}

if (config.enableTLS) {
  ehloCapabilities += `250-STARTTLS\\r\\n`;
}

ehloCapabilities += `250 HELP\\r\\n`;

// Current timestamp for logging
const timestamp = new Date().toISOString();
-%>
{
  "port": <%= config.smtpPort %>,
  "protocol": "tcp",
      "name": "<%= config.serverName %>",
      "mode": "text",
      "recordRequests": true,
      "allowCORS": true,
      "defaultResponse": {
        "data": "220 <%= config.smtpHost %> <%= config.welcomeMessage %>\\r\\n"
      },
      "stubs": [
        {
          "_comment": "SMTP Welcome message - sent on connection (Generated: <%= timestamp %>)",
          "predicates": [
            {
              "matches": {
                "data": "^\\\\s*$"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "220 <%= config.smtpHost %> <%= config.welcomeMessage %>\\r\\n"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.welcome %>
              }
            }
          ]
        },
        {
          "_comment": "Handle EHLO commands - Extended SMTP",
          "predicates": [
            {
              "matches": {
                "data": "^EHLO"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "<%= ehloCapabilities %>"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.ehlo %>
              }
            }
          ]
        },
        {
          "_comment": "Handle HELO commands - Standard SMTP",
          "predicates": [
            {
              "matches": {
                "data": "^HELO"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 <%= config.smtpHost %> Hello client\\r\\n"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.ehlo %>
              }
            }
          ]
        },
        {
          "_comment": "Handle MAIL FROM commands",
          "predicates": [
            {
              "matches": {
                "data": "^MAIL FROM:"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.1.0 Sender OK\\r\\n"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.mail %>
              }
            }
          ]
        },
        {
          "_comment": "Handle RCPT TO commands - Success case",
          "predicates": [
            {
              "matches": {
                "data": "^RCPT TO:"
              }
            },
            {
              "not": {
                "matches": {
                  "data": "blocked@|spam@|invalid@|reject@"
                }
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.1.5 Recipient OK\\r\\n"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.rcpt %>
              }
            }
          ]
        },
        {
          "_comment": "Handle RCPT TO commands - Rejected recipients",
          "predicates": [
            {
              "matches": {
                "data": "^RCPT TO:"
              }
            },
            {
              "matches": {
                "data": "blocked@|spam@|invalid@|reject@"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "550 5.1.1 User unknown\\r\\n"
              },
              "_behaviors": {
                "wait": 200
              }
            }
          ]
        },
        {
          "_comment": "Handle DATA command",
          "predicates": [
            {
              "matches": {
                "data": "^DATA"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "354 Start mail input; end with <CRLF>.<CRLF>\\r\\n"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.data %>
              }
            }
          ]
        },
        {
          "_comment": "Handle end of DATA (message termination)",
          "predicates": [
            {
              "matches": {
                "data": "^\\\\.$"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.0.0 Message accepted for delivery\\r\\n"
              },
              "_behaviors": {
                "wait": 300
              }
            }
          ]
        },
        {
          "_comment": "Handle email content (anything that looks like email headers or body)",
          "predicates": [
            {
              "or": [
                {
                  "matches": {
                    "data": "^From:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^To:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^Subject:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^Date:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^Message-ID:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^Content-Type:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^Content-Transfer-Encoding:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^MIME-Version:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^X-.*:\\\\s*"
                  }
                },
                {
                  "matches": {
                    "data": "^This is a test email"
                  }
                },
                {
                  "matches": {
                    "data": "^Test Details:"
                  }
                },
                {
                  "matches": {
                    "data": "^- Thread:"
                  }
                },
                {
                  "matches": {
                    "data": "^- Iteration:"
                  }
                },
                {
                  "matches": {
                    "data": "^- Timestamp:"
                  }
                },
                {
                  "matches": {
                    "data": "^- Sender:"
                  }
                },
                {
                  "matches": {
                    "data": "^- Recipient:"
                  }
                },
                {
                  "matches": {
                    "data": "^This email is part of"
                  }
                },
                {
                  "matches": {
                    "data": "^Best regards,"
                  }
                },
                {
                  "matches": {
                    "data": "^JMeter SMTP"
                  }
                },
                {
                  "matches": {
                    "data": "^\\\\s*$"
                  }
                }
              ]
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.0.0 Email content received\\r\\n"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.content %>
              }
            }
          ]
        },
        {
          "_comment": "Handle any other email content or body text (fallback for email data)",
          "predicates": [
            {
              "and": [
                {
                  "not": {
                    "matches": {
                      "data": "^(EHLO|HELO|MAIL|RCPT|DATA|RSET|NOOP|QUIT|HELP|AUTH|STARTTLS|VRFY)\\\\b"
                    }
                  }
                },
                {
                  "not": {
                    "matches": {
                      "data": "^\\\\.$"
                    }
                  }
                },
                {
                  "matches": {
                    "data": ".+"
                  }
                }
              ]
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.0.0 Email data accepted\\r\\n"
              },
              "_behaviors": {
                "wait": 5
              }
            }
          ]
        },
        {
          "_comment": "Handle RSET command",
          "predicates": [
            {
              "matches": {
                "data": "^RSET"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.0.0 Reset OK\\r\\n"
              },
              "_behaviors": {
                "wait": 50
              }
            }
          ]
        },
        {
          "_comment": "Handle NOOP command",
          "predicates": [
            {
              "matches": {
                "data": "^NOOP"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.0.0 OK\\r\\n"
              },
              "_behaviors": {
                "wait": 25
              }
            }
          ]
        },
        {
          "_comment": "Handle QUIT command",
          "predicates": [
            {
              "matches": {
                "data": "^QUIT"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "221 2.0.0 <%= config.smtpHost %> closing connection\\r\\n"
              },
              "_behaviors": {
                "wait": <%= config.responseDelays.quit %>
              }
            }
          ]
        },
        {
          "_comment": "Handle HELP command",
          "predicates": [
            {
              "matches": {
                "data": "^HELP"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "214-This is <%= config.serverName %>\\r\\n214-Commands supported:\\r\\n214-HELO EHLO MAIL RCPT DATA RSET NOOP QUIT HELP<% if (config.enableAuth) { %> AUTH<% } %><% if (config.enableTLS) { %> STARTTLS<% } %>\\r\\n214 End of HELP info\\r\\n"
              },
              "_behaviors": {
                "wait": 100
              }
            }
          ]
        }<% if (config.enableAuth) { %>,
        {
          "_comment": "Handle AUTH commands (simulated authentication)",
          "predicates": [
            {
              "matches": {
                "data": "^AUTH"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "235 2.7.0 Authentication successful\\r\\n"
              },
              "_behaviors": {
                "wait": 200
              }
            }
          ]
        }<% } %><% if (config.enableTLS) { %>,
        {
          "_comment": "Handle STARTTLS command",
          "predicates": [
            {
              "matches": {
                "data": "^STARTTLS"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "220 2.0.0 Ready to start TLS\\r\\n"
              },
              "_behaviors": {
                "wait": 150
              }
            }
          ]
        }<% } %>,
        {
          "_comment": "Handle VRFY command (verify user)",
          "predicates": [
            {
              "matches": {
                "data": "^VRFY"
              }
            }
          ],
          "responses": [
            {
              "is": {
                "data": "250 2.1.5 User is valid\\r\\n"
              },
              "_behaviors": {
                "wait": 200
              }
            }
          ]
        },
        {
          "_comment": "Handle unknown/unsupported commands (only actual invalid SMTP commands)",
          "predicates": [
            {
              "and": [
                {
                  "matches": {
                    "data": "^[A-Z]{3,8}\\\\b"
                  }
                },
                {
                  "not": {
                    "matches": {
                      "data": "^(EHLO|HELO|MAIL|RCPT|DATA|RSET|NOOP|QUIT|HELP|AUTH|STARTTLS|VRFY)\\\\b"
                    }
                  }
                }
              ]
            }
          ],
          "responses": [
            {
              "is": {
                "data": "500 5.5.1 Command not recognized\\r\\n"
              },
              "_behaviors": {
                "wait": 100
              }
            }
          ]
        }
      ]
}
