name: Build and Execute K6 Tests on OpenShift

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to OpenShift
      - name: Log in to OpenShift
        env:
          OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER_URL }}
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
        run: |
          oc login https://api.sandbox-m3.1530.p1.openshiftapps.com:6443 --token=sha256~RFq9dnBGAJWeILTYHTy1LM1Y-7MNvIn0PDPBa3r1Ls8

      # Step 4: Log in to OpenShift internal registry
      - name: Log in to OpenShift internal registry
        run: |
          oc registry login --token=sha256~RFq9dnBGAJWeILTYHTy1LM1Y-7MNvIn0PDPBa3r1Ls8 --server=https://api.sandbox-m3.1530.p1.openshiftapps.com:6443
      
      # Step 5 : Switching to Correct Openshift project namespace
      - name: Switch to OpenShift project
        env:
          OPENSHIFT_PROJECT: senarindam21-dev
        run: |
          oc project $OPENSHIFT_PROJECT
          
      # Step 6: Create the POD using YAML & Execute K6 test
      - name: Create the k6 test POD
        run: |
          oc apply -f ./k6-pod.yaml

      # Step 7: Capture POD name & Status & Apply Condition based on POD Status
      - name: Display POD name & Current Status
        run: |
          POD_NAME=$(kubectl get pods -o jsonpath='{.items[0].metadata.name}')
          echo "The Created POD is" $POD_NAME
          sleep 20
          POD_STATUS=$(kubectl get pod $POD_NAME -o jsonpath='{.status.phase}')
          echo "Current POD status is" $POD_STATUS
          while [[ "$POD_STATUS" != "Succeeded" ]]; do
             POD_STATUS=$(kubectl get pod $POD_NAME -o jsonpath='{.status.phase}')
             echo "Test is in Progress with POD Status" $POD_STATUS
             sleep 20
          done
             echo "Test is Completed"

      # Step 8: Retrieve POD logs
      - name: Retrieve pod logs
        run: |
          mkdir -p logs
          kubectl logs $POD_NAME > logs/pod.log

      # Step 9: Upload POD logs to Github
      - name: Upload POD logs
        uses: actions/upload-artifact@v4
        with:
          name: pod-logs
          path: logs/
